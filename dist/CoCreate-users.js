(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["CoCreateUsers"] = factory();
	else
		root["CoCreateUsers"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./CoCreate-components/CoCreate-users/src/CoCreate-users.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./CoCreate-components/CoCreate-users/src/CoCreate-users.js":
/*!******************************************************************!*\
  !*** ./CoCreate-components/CoCreate-users/src/CoCreate-users.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar permissionClass = 'checkPermission';\nvar usersCollection = 'users';\nvar orgCollection = \"organizations\";\nvar createdUserId = \"\";\nvar createdOrgId = \"\";\nvar redirectClass = 'redirectLink';\ncheckSession();\ninitSocketsForUsers();\nfetchUser();\ninitLoginForms();\ninitCurrentOrgEles();\ninitLogoutBtn(); //initRegisterForms();\n\nvar getOrg = false;\nvar updatedCurrentOrg = false;\n\nfunction initSocketsForUsers() {\n  CoCreateSocket.listen('fetchedUser', function (data) {\n    fetchedUser(data);\n  });\n  CoCreateSocket.listen('login', function (data) {\n    loginResult(data);\n  });\n  CoCreateSocket.listen('createDocument', function (data) {\n    registerResult(data);\n  });\n  CoCreateSocket.listen('usersCurrentOrg', function (data) {\n    updatedCurrentOrg = true;\n    getOrg = true;\n    localStorage.setItem('apiKey', data['apiKey']);\n    localStorage.setItem('securityKey', data['securityKey']);\n    localStorage.setItem('organization_id', data['current_org']);\n    localStorage.setItem('adminUI_id', data['adminUI_id']);\n    localStorage.setItem('builderUI_id', data['builderUI_id']); //. fire fetchedUsersCurrentOrg\n\n    document.dispatchEvent(new CustomEvent('fetchedUsersCurrentOrg'));\n\n    if (data.href) {\n      window.location.href = data.href;\n    }\n  });\n  CoCreate.listenMessage('changedUserStatus', function (data) {\n    changedUserStatus(data);\n  });\n}\n\nfunction fetchUser() {\n  var user_id = localStorage.getItem('user_id');\n\n  if (user_id) {\n    var json = {\n      \"apiKey\": config.apiKey,\n      \"securityKey\": config.securityKey,\n      \"organization_id\": config.organization_Id,\n      \"data-collection\": usersCollection,\n      \"user_id\": user_id\n    };\n    CoCreateSocket.send('fetchUser', json);\n  }\n}\n\nfunction fetchedUser(data) {\n  console.log(data);\n  checkPermissions(data);\n}\n\nfunction checkPermissions(data) {\n  var tags = document.querySelectorAll('.' + permissionClass);\n  console.log(tags);\n\n  for (var i = 0; i < tags.length; i++) {\n    var tag = tags[i];\n    var module_id = tag.getAttribute('data-document_id') ? tag.getAttribute('data-document_id') : tag.getAttribute('data-pass_document_id');\n    var data_permission = tag.getAttribute('data-permission');\n    var userPermission = data['permission-' + module_id];\n    console.log(userPermission);\n\n    if (userPermission.indexOf(data_permission) == -1) {\n      switch (data_permission) {\n        case 'create':\n          tag.style.display = 'none';\n          break;\n\n        case 'read':\n          tag.style.display = 'none';\n          break;\n\n        case 'delete':\n          tag.style.display = 'none';\n          break;\n\n        case 'delete':\n          tag.readOnly = true;\n          break;\n\n        default: // code\n\n      }\n    } else {\n      switch (data_permission) {}\n    }\n  }\n}\n\nfunction initLoginForms() {\n  var forms = document.querySelectorAll('form');\n\n  for (var i = 0; i < forms.length; i++) {\n    initLoginForm(forms[i]);\n  }\n}\n\nfunction initLoginForm(form) {\n  var loginBtn = form.querySelector('.loginBtn');\n  if (!loginBtn) return;\n  loginBtn.addEventListener('click', function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    var collection = form.getAttribute('data-collection') || 'module_activity';\n    var loginData = {};\n    var inputs = form.querySelectorAll('input, textarea');\n    inputs.forEach(function (input) {\n      var name = input.getAttribute('name');\n      var value = input.value;\n\n      if (input.type == 'password') {\n        value = btoa(value);\n      }\n\n      collection = input.getAttribute('data-collection') || collection;\n\n      if (name) {\n        loginData[name] = value;\n      }\n    });\n    var json = {\n      \"apiKey\": config.apiKey,\n      \"securityKey\": config.securityKey,\n      \"organization_id\": config.organization_Id,\n      \"data-collection\": collection,\n      \"loginData\": loginData\n    };\n    CoCreateSocket.send('login', json);\n  });\n}\n\nfunction loginResult(data) {\n  var success = data.success,\n      status = data.status,\n      message = data.message;\n  CoCreateRender.render(\"[data-template_id='afterLoginResponse']\", data);\n\n  if (data.success) {\n    localStorage.setItem('user_id', data['id']);\n    var href = \"\";\n    var aTag = document.querySelector(\"form .loginBtn a\");\n\n    if (aTag) {\n      href = aTag.getAttribute('href');\n    }\n\n    getCurrentOrg(data['id'], data['collection'], href);\n  } else {//. render data\n  }\n}\n\nfunction getCurrentOrg(user_id, collection, href) {\n  var json = {\n    \"data-collection\": collection || usersCollection,\n    \"user_id\": user_id,\n    \"href\": href\n  };\n  CoCreateSocket.send('usersCurrentOrg', json);\n}\n\nfunction userRegisterAction(el) {\n  if (!el) return;\n  var form = el.closest('form');\n  if (!form) return;\n  CoCreateDocument.requestDocumentIdOfForm(form);\n}\n\nfunction registerResult(data) {\n  if (data['collection'] === orgCollection) {\n    createdOrgId = data['document_id'];\n  }\n\n  if (data['collection'] === usersCollection) {\n    createdUserId = data['document_id'];\n  }\n\n  if (createdOrgId && createdUserId) {\n    CoCreate.updateDocument(_defineProperty({\n      broadcast: false,\n      collection: usersCollection,\n      document_id: createdUserId,\n      data: {\n        current_org: createdOrgId,\n        connected_orgs: [createdOrgId]\n      }\n    }, \"broadcast\", false));\n    localStorage.setItem('user_id', createdUserId); // let aTag = document.querySelector(\".registerBtn > a\");\n    // let href = \"\";\n    // if (aTag) {\n    //   href= aTag.getAttribute(\"href\");\n    // }\n\n    getCurrentOrg(createdUserId, usersCollection, null);\n  }\n}\n\nfunction initCurrentOrgEles() {\n  var user_id = localStorage.getItem('user_id');\n  if (!user_id) return;\n  var orgChangers = document.querySelectorAll('.org-changer');\n\n  for (var i = 0; i < orgChangers.length; i++) {\n    var orgChanger = orgChangers[i];\n    var collection = orgChanger.getAttribute('data-collection') ? orgChanger.getAttribute('data-collection') : 'module_activity';\n    var id = orgChanger.getAttribute('data-document_id');\n\n    if (collection == 'users' && id == user_id) {\n      orgChanger.addEventListener('selectedValue', function (e) {\n        setTimeout(function () {\n          getCurrentOrg(user_id);\n          var timer = setInterval(function () {\n            if (updatedCurrentOrg) {\n              location.reload();\n              clearInterval(timer);\n            }\n          }, 100);\n        }, 300);\n      });\n    }\n  }\n}\n\nfunction initLogoutBtn() {\n  var logoutBtns = document.querySelectorAll('.logoutBtn');\n\n  for (var i = 0; i < logoutBtns.length; i++) {\n    var logoutBtn = logoutBtns[i];\n    logoutBtn.addEventListener('click', function (e) {\n      e.preventDefault();\n      localStorage.clear();\n      var href = this.getAttribute('href');\n      if (href) document.location.href = href;\n    });\n  }\n}\n\nfunction checkSession() {\n  var user_id = localStorage.getItem('user_id');\n\n  if (user_id) {\n    var redirectTag = document.querySelector('.sessionTrue');\n\n    if (redirectTag) {\n      var redirectLink = redirectTag.getAttribute('href');\n\n      if (redirectLink) {\n        document.location.href = redirectLink;\n      }\n    }\n  } else {\n    var redirectTag = document.querySelector('.sessionFalse');\n\n    if (redirectTag) {\n      var _redirectLink = redirectTag.getAttribute('href');\n\n      if (_redirectLink) {\n        localStorage.clear();\n        document.location.href = _redirectLink;\n      }\n    }\n  }\n}\n\nfunction changedUserStatus(data) {\n  if (!data.user_id) {\n    return;\n  }\n\n  var statusEls = document.querySelectorAll(\"[data-user_status][data-document_id='\".concat(data['user_id'], \"']\"));\n  statusEls.forEach(function (el) {\n    el.setAttribute('data-user_status', data['status']);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db0NyZWF0ZVVzZXJzLy4vQ29DcmVhdGUtY29tcG9uZW50cy9Db0NyZWF0ZS11c2Vycy9zcmMvQ29DcmVhdGUtdXNlcnMuanM/OWQ0NSJdLCJuYW1lcyI6WyJwZXJtaXNzaW9uQ2xhc3MiLCJ1c2Vyc0NvbGxlY3Rpb24iLCJvcmdDb2xsZWN0aW9uIiwiY3JlYXRlZFVzZXJJZCIsImNyZWF0ZWRPcmdJZCIsInJlZGlyZWN0Q2xhc3MiLCJjaGVja1Nlc3Npb24iLCJpbml0U29ja2V0c0ZvclVzZXJzIiwiZmV0Y2hVc2VyIiwiaW5pdExvZ2luRm9ybXMiLCJpbml0Q3VycmVudE9yZ0VsZXMiLCJpbml0TG9nb3V0QnRuIiwiZ2V0T3JnIiwidXBkYXRlZEN1cnJlbnRPcmciLCJDb0NyZWF0ZVNvY2tldCIsImxpc3RlbiIsImRhdGEiLCJmZXRjaGVkVXNlciIsImxvZ2luUmVzdWx0IiwicmVnaXN0ZXJSZXN1bHQiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiZG9jdW1lbnQiLCJkaXNwYXRjaEV2ZW50IiwiQ3VzdG9tRXZlbnQiLCJocmVmIiwid2luZG93IiwibG9jYXRpb24iLCJDb0NyZWF0ZSIsImxpc3Rlbk1lc3NhZ2UiLCJjaGFuZ2VkVXNlclN0YXR1cyIsInVzZXJfaWQiLCJnZXRJdGVtIiwianNvbiIsImNvbmZpZyIsImFwaUtleSIsInNlY3VyaXR5S2V5Iiwib3JnYW5pemF0aW9uX0lkIiwic2VuZCIsImNvbnNvbGUiLCJsb2ciLCJjaGVja1Blcm1pc3Npb25zIiwidGFncyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpIiwibGVuZ3RoIiwidGFnIiwibW9kdWxlX2lkIiwiZ2V0QXR0cmlidXRlIiwiZGF0YV9wZXJtaXNzaW9uIiwidXNlclBlcm1pc3Npb24iLCJpbmRleE9mIiwic3R5bGUiLCJkaXNwbGF5IiwicmVhZE9ubHkiLCJmb3JtcyIsImluaXRMb2dpbkZvcm0iLCJmb3JtIiwibG9naW5CdG4iLCJxdWVyeVNlbGVjdG9yIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNvbGxlY3Rpb24iLCJsb2dpbkRhdGEiLCJpbnB1dHMiLCJmb3JFYWNoIiwiaW5wdXQiLCJuYW1lIiwidmFsdWUiLCJ0eXBlIiwiYnRvYSIsInN1Y2Nlc3MiLCJzdGF0dXMiLCJtZXNzYWdlIiwiQ29DcmVhdGVSZW5kZXIiLCJyZW5kZXIiLCJhVGFnIiwiZ2V0Q3VycmVudE9yZyIsInVzZXJSZWdpc3RlckFjdGlvbiIsImVsIiwiY2xvc2VzdCIsIkNvQ3JlYXRlRG9jdW1lbnQiLCJyZXF1ZXN0RG9jdW1lbnRJZE9mRm9ybSIsInVwZGF0ZURvY3VtZW50IiwiYnJvYWRjYXN0IiwiZG9jdW1lbnRfaWQiLCJjdXJyZW50X29yZyIsImNvbm5lY3RlZF9vcmdzIiwib3JnQ2hhbmdlcnMiLCJvcmdDaGFuZ2VyIiwiaWQiLCJzZXRUaW1lb3V0IiwidGltZXIiLCJzZXRJbnRlcnZhbCIsInJlbG9hZCIsImNsZWFySW50ZXJ2YWwiLCJsb2dvdXRCdG5zIiwibG9nb3V0QnRuIiwiY2xlYXIiLCJyZWRpcmVjdFRhZyIsInJlZGlyZWN0TGluayIsInN0YXR1c0VscyIsInNldEF0dHJpYnV0ZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxlQUFlLEdBQUcsaUJBQXRCO0FBQ0EsSUFBSUMsZUFBZSxHQUFHLE9BQXRCO0FBQ0EsSUFBSUMsYUFBYSxHQUFHLGVBQXBCO0FBQ0EsSUFBSUMsYUFBYSxHQUFHLEVBQXBCO0FBQ0EsSUFBSUMsWUFBWSxHQUFHLEVBQW5CO0FBR0EsSUFBSUMsYUFBYSxHQUFHLGNBQXBCO0FBRUFDLFlBQVk7QUFDWkMsbUJBQW1CO0FBQ25CQyxTQUFTO0FBQ1RDLGNBQWM7QUFDZEMsa0JBQWtCO0FBQ2xCQyxhQUFhLEcsQ0FDYjs7QUFFQSxJQUFJQyxNQUFNLEdBQUcsS0FBYjtBQUNBLElBQUlDLGlCQUFpQixHQUFHLEtBQXhCOztBQUdBLFNBQVNOLG1CQUFULEdBQStCO0FBQzdCTyxnQkFBYyxD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QixJQUFJLENBQUMsU0FBRCxDQUF0RSxRQUFoQjtBQUVBdUYsV0FBUyxDQUFDcEMsT0FBVixDQUFrQixVQUFDYyxFQUFELEVBQVE7QUFDeEJBLE1BQUUsQ0FBQ3VCLFlBQUgsQ0FBZ0Isa0JBQWhCLEVBQW9DeEYsSUFBSSxDQUFDLFFBQUQsQ0FBeEM7QUFDRCxHQUZEO0FBR0QiLCJmaWxlIjoiLi9Db0NyZWF0ZS1jb21wb25lbnRzL0NvQ3JlYXRlLXVzZXJzL3NyYy9Db0NyZWF0ZS11c2Vycy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBwZXJtaXNzaW9uQ2xhc3MgPSAnY2hlY2tQZXJtaXNzaW9uJztcbnZhciB1c2Vyc0NvbGxlY3Rpb24gPSAndXNlcnMnO1xudmFyIG9yZ0NvbGxlY3Rpb24gPSBcIm9yZ2FuaXphdGlvbnNcIjtcbnZhciBjcmVhdGVkVXNlcklkID0gXCJcIjtcbnZhciBjcmVhdGVkT3JnSWQgPSBcIlwiO1xuXG5cbnZhciByZWRpcmVjdENsYXNzID0gJ3JlZGlyZWN0TGluayc7XG5cbmNoZWNrU2Vzc2lvbigpO1xuaW5pdFNvY2tldHNGb3JVc2VycygpO1xuZmV0Y2hVc2VyKCk7XG5pbml0TG9naW5Gb3JtcygpO1xuaW5pdEN1cnJlbnRPcmdFbGVzKCk7XG5pbml0TG9nb3V0QnRuKCk7XG4vL2luaXRSZWdpc3RlckZvcm1zKCk7XG5cbnZhciBnZXRPcmcgPSBmYWxzZTtcbnZhciB1cGRhdGVkQ3VycmVudE9yZyA9IGZhbHNlO1xuXG5cbmZ1bmN0aW9uIGluaXRTb2NrZXRzRm9yVXNlcnMoKSB7XG4gIENvQ3JlYXRlU29ja2V0Lmxpc3RlbignZmV0Y2hlZFVzZXInLCBmdW5jdGlvbihkYXRhKSB7XG4gICAgZmV0Y2hlZFVzZXIoZGF0YSk7XG4gIH0pXG4gIFxuICBDb0NyZWF0ZVNvY2tldC5saXN0ZW4oJ2xvZ2luJywgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICBsb2dpblJlc3VsdChkYXRhKTtcbiAgfSlcbiAgXG4gIENvQ3JlYXRlU29ja2V0Lmxpc3RlbignY3JlYXRlRG9jdW1lbnQnLCBmdW5jdGlvbihkYXRhKSB7XG4gICAgcmVnaXN0ZXJSZXN1bHQoZGF0YSk7XG4gIH0pXG4gIFxuICBDb0NyZWF0ZVNvY2tldC5saXN0ZW4oJ3VzZXJzQ3VycmVudE9yZycsIGZ1bmN0aW9uKGRhdGEpIHtcblxuICAgIHVwZGF0ZWRDdXJyZW50T3JnID0gdHJ1ZTtcbiAgICBnZXRPcmcgPSB0cnVlO1xuICAgIFxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhcGlLZXknLCBkYXRhWydhcGlLZXknXSk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3NlY3VyaXR5S2V5JywgZGF0YVsnc2VjdXJpdHlLZXknXSk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ29yZ2FuaXphdGlvbl9pZCcsIGRhdGFbJ2N1cnJlbnRfb3JnJ10pO1xuICAgIFxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhZG1pblVJX2lkJywgZGF0YVsnYWRtaW5VSV9pZCddKTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnYnVpbGRlclVJX2lkJywgZGF0YVsnYnVpbGRlclVJX2lkJ10pO1xuXG4gICAgLy8uIGZpcmUgZmV0Y2hlZFVzZXJzQ3VycmVudE9yZ1xuICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KCdmZXRjaGVkVXNlcnNDdXJyZW50T3JnJykpO1xuXG4gICAgaWYgKGRhdGEuaHJlZikge1xuICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBkYXRhLmhyZWY7XG4gICAgfVxuICB9KVxuICBcbiAgQ29DcmVhdGUubGlzdGVuTWVzc2FnZSgnY2hhbmdlZFVzZXJTdGF0dXMnLCBmdW5jdGlvbihkYXRhKSB7XG4gICAgY2hhbmdlZFVzZXJTdGF0dXMoZGF0YSlcbiAgfSlcbn1cblxuZnVuY3Rpb24gZmV0Y2hVc2VyKCkge1xuICBcbiAgdmFyIHVzZXJfaWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcl9pZCcpO1xuXG4gIGlmICh1c2VyX2lkKSB7XG4gICAgdmFyIGpzb24gPSB7XG4gICAgICBcImFwaUtleVwiOiBjb25maWcuYXBpS2V5LFxuICAgICAgXCJzZWN1cml0eUtleVwiOiBjb25maWcuc2VjdXJpdHlLZXksXG4gICAgICBcIm9yZ2FuaXphdGlvbl9pZFwiOiBjb25maWcub3JnYW5pemF0aW9uX0lkLFxuICAgICAgXCJkYXRhLWNvbGxlY3Rpb25cIjogdXNlcnNDb2xsZWN0aW9uLFxuICAgICAgXCJ1c2VyX2lkXCI6IHVzZXJfaWRcbiAgICB9XG4gICAgXG4gICAgQ29DcmVhdGVTb2NrZXQuc2VuZCgnZmV0Y2hVc2VyJywganNvbik7XG4gIH1cbn1cblxuZnVuY3Rpb24gZmV0Y2hlZFVzZXIoZGF0YSkge1xuICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgXG4gIGNoZWNrUGVybWlzc2lvbnMoZGF0YSk7XG59XG5cbmZ1bmN0aW9uIGNoZWNrUGVybWlzc2lvbnMoZGF0YSkge1xuICB2YXIgdGFncyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy4nICsgcGVybWlzc2lvbkNsYXNzKTtcbiAgXG4gIGNvbnNvbGUubG9nKHRhZ3MpO1xuICBcbiAgZm9yICh2YXIgaT0wOyBpPHRhZ3MubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdGFnID0gdGFnc1tpXTtcbiAgICBcbiAgICB2YXIgbW9kdWxlX2lkID0gdGFnLmdldEF0dHJpYnV0ZSgnZGF0YS1kb2N1bWVudF9pZCcpID8gdGFnLmdldEF0dHJpYnV0ZSgnZGF0YS1kb2N1bWVudF9pZCcpOiB0YWcuZ2V0QXR0cmlidXRlKCdkYXRhLXBhc3NfZG9jdW1lbnRfaWQnKTtcbiAgICB2YXIgZGF0YV9wZXJtaXNzaW9uID0gdGFnLmdldEF0dHJpYnV0ZSgnZGF0YS1wZXJtaXNzaW9uJyk7XG4gICAgXG4gICAgdmFyIHVzZXJQZXJtaXNzaW9uID0gZGF0YVsncGVybWlzc2lvbi0nICsgbW9kdWxlX2lkXTtcbiAgICBcbiAgICBjb25zb2xlLmxvZyh1c2VyUGVybWlzc2lvbik7XG4gICAgXG4gICAgaWYgKHVzZXJQZXJtaXNzaW9uLmluZGV4T2YoZGF0YV9wZXJtaXNzaW9uKSA9PSAtMSkge1xuICAgICAgc3dpdGNoIChkYXRhX3Blcm1pc3Npb24pIHtcbiAgICAgICAgY2FzZSAnY3JlYXRlJzpcbiAgICAgICAgICB0YWcuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAncmVhZCc6XG4gICAgICAgICAgdGFnLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2RlbGV0ZSc6XG4gICAgICAgICAgdGFnLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2RlbGV0ZSc6XG4gICAgICAgICAgdGFnLnJlYWRPbmx5ID0gdHJ1ZTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAvLyBjb2RlXG4gICAgICB9XG4gICAgfSBlbHNlICB7XG4gICAgICBzd2l0Y2ggKGRhdGFfcGVybWlzc2lvbikge1xuICAgICAgICBcbiAgICAgICAgICAvLyBjb2RlXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRMb2dpbkZvcm1zKCkge1xuICB2YXIgZm9ybXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdmb3JtJyk7XG4gIFxuICBmb3IgKHZhciBpPTA7IGkgPCBmb3Jtcy5sZW5ndGg7IGkrKykge1xuICAgIGluaXRMb2dpbkZvcm0oZm9ybXNbaV0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRMb2dpbkZvcm0oZm9ybSkge1xuXG4gIHZhciBsb2dpbkJ0biA9IGZvcm0ucXVlcnlTZWxlY3RvcignLmxvZ2luQnRuJyk7XG4gIFxuICBpZiAoIWxvZ2luQnRuKSByZXR1cm47XG4gIFxuICBsb2dpbkJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgIGxldCBjb2xsZWN0aW9uID0gZm9ybS5nZXRBdHRyaWJ1dGUoJ2RhdGEtY29sbGVjdGlvbicpIHx8ICdtb2R1bGVfYWN0aXZpdHknO1xuICAgIGxldCBsb2dpbkRhdGEgPSB7fTtcbiAgICBcbiAgICBjb25zdCBpbnB1dHMgPSBmb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0LCB0ZXh0YXJlYScpO1xuXG4gICAgaW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBjb25zdCBuYW1lID0gaW5wdXQuZ2V0QXR0cmlidXRlKCduYW1lJyk7XG4gICAgICBsZXQgdmFsdWUgPSBpbnB1dC52YWx1ZTtcbiAgICAgIGlmIChpbnB1dC50eXBlID09ICdwYXNzd29yZCcpIHtcbiAgICAgICAgdmFsdWUgPSBidG9hKHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGNvbGxlY3Rpb24gPSBpbnB1dC5nZXRBdHRyaWJ1dGUoJ2RhdGEtY29sbGVjdGlvbicpIHx8IGNvbGxlY3Rpb247XG4gICAgICBcbiAgICAgIGlmIChuYW1lKSB7XG4gICAgICAgIGxvZ2luRGF0YVtuYW1lXSA9IHZhbHVlO1xuICAgICAgfVxuICAgIH0pXG4gICAgXG4gICAgdmFyIGpzb24gPSB7XG4gICAgICBcImFwaUtleVwiOiBjb25maWcuYXBpS2V5LFxuICAgICAgXCJzZWN1cml0eUtleVwiOiBjb25maWcuc2VjdXJpdHlLZXksXG4gICAgICBcIm9yZ2FuaXphdGlvbl9pZFwiOiBjb25maWcub3JnYW5pemF0aW9uX0lkLFxuICAgICAgXCJkYXRhLWNvbGxlY3Rpb25cIjogY29sbGVjdGlvbixcbiAgICAgIFwibG9naW5EYXRhXCI6IGxvZ2luRGF0YVxuICAgIH1cblxuICAgIENvQ3JlYXRlU29ja2V0LnNlbmQoJ2xvZ2luJywganNvbik7XG4gIH0pXG59XG5cbmZ1bmN0aW9uIGxvZ2luUmVzdWx0KGRhdGEpIHtcbiAgY29uc3Qge3N1Y2Nlc3MsIHN0YXR1cywgbWVzc2FnZSB9ID0gZGF0YTtcbiAgXG4gIENvQ3JlYXRlUmVuZGVyLnJlbmRlcihcIltkYXRhLXRlbXBsYXRlX2lkPSdhZnRlckxvZ2luUmVzcG9uc2UnXVwiLCBkYXRhKVxuXG4gIGlmIChkYXRhLnN1Y2Nlc3MpIHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcl9pZCcsIGRhdGFbJ2lkJ10pO1xuICAgIGxldCBocmVmID0gXCJcIjtcbiAgICBsZXQgYVRhZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJmb3JtIC5sb2dpbkJ0biBhXCIpO1xuICAgIGlmIChhVGFnKSB7XG4gICAgICBocmVmID0gYVRhZy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKTtcbiAgICB9XG4gICAgZ2V0Q3VycmVudE9yZyhkYXRhWydpZCddLCBkYXRhWydjb2xsZWN0aW9uJ10sIGhyZWYpO1xuXG4gIH0gZWxzZSB7XG4gICAgLy8uIHJlbmRlciBkYXRhXG4gICAgXG4gIH1cbn1cblxuXG5mdW5jdGlvbiBnZXRDdXJyZW50T3JnKHVzZXJfaWQsIGNvbGxlY3Rpb24sIGhyZWYpIHtcbiAgdmFyIGpzb24gPSB7XG4gICAgXCJkYXRhLWNvbGxlY3Rpb25cIjogY29sbGVjdGlvbiB8fCB1c2Vyc0NvbGxlY3Rpb24sXG4gICAgXCJ1c2VyX2lkXCI6IHVzZXJfaWQsXG4gICAgXCJocmVmXCI6IGhyZWZcbiAgfVxuICBcbiAgQ29DcmVhdGVTb2NrZXQuc2VuZCgndXNlcnNDdXJyZW50T3JnJywganNvbik7XG59XG5cbmZ1bmN0aW9uIHVzZXJSZWdpc3RlckFjdGlvbihlbCkge1xuICBpZiAoIWVsKSByZXR1cm47XG4gIHZhciBmb3JtID0gZWwuY2xvc2VzdCgnZm9ybScpO1xuICBpZiAoIWZvcm0pIHJldHVybjtcbiAgQ29DcmVhdGVEb2N1bWVudC5yZXF1ZXN0RG9jdW1lbnRJZE9mRm9ybShmb3JtKTtcbn1cblxuZnVuY3Rpb24gcmVnaXN0ZXJSZXN1bHQoZGF0YSkge1xuXG4gIGlmIChkYXRhWydjb2xsZWN0aW9uJ10gPT09IG9yZ0NvbGxlY3Rpb24pIHtcbiAgICBjcmVhdGVkT3JnSWQgPSBkYXRhWydkb2N1bWVudF9pZCddO1xuICB9XG4gIFxuICBpZiAoZGF0YVsnY29sbGVjdGlvbiddID09PSB1c2Vyc0NvbGxlY3Rpb24pIHtcbiAgICBjcmVhdGVkVXNlcklkID0gZGF0YVsnZG9jdW1lbnRfaWQnXTtcbiAgfVxuICBcbiAgaWYgKGNyZWF0ZWRPcmdJZCAmJiBjcmVhdGVkVXNlcklkKSB7XG4gICAgQ29DcmVhdGUudXBkYXRlRG9jdW1lbnQoe1xuICAgICAgYnJvYWRjYXN0OiBmYWxzZSxcbiAgICAgIGNvbGxlY3Rpb246IHVzZXJzQ29sbGVjdGlvbixcbiAgICAgIGRvY3VtZW50X2lkOiBjcmVhdGVkVXNlcklkLFxuICAgICAgZGF0YToge1xuICAgICAgICBjdXJyZW50X29yZzogY3JlYXRlZE9yZ0lkLFxuICAgICAgICBjb25uZWN0ZWRfb3JnczogW2NyZWF0ZWRPcmdJZF1cbiAgICAgIH0sIFxuICAgICAgYnJvYWRjYXN0OiBmYWxzZVxuICAgIH0pXG5cbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcl9pZCcsIGNyZWF0ZWRVc2VySWQpXG4gICAgLy8gbGV0IGFUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnJlZ2lzdGVyQnRuID4gYVwiKTtcbiAgICAvLyBsZXQgaHJlZiA9IFwiXCI7XG4gICAgLy8gaWYgKGFUYWcpIHtcbiAgICAvLyAgIGhyZWY9IGFUYWcuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKTtcbiAgICAvLyB9XG4gICAgXG4gICAgZ2V0Q3VycmVudE9yZyhjcmVhdGVkVXNlcklkLCB1c2Vyc0NvbGxlY3Rpb24sIG51bGwpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluaXRDdXJyZW50T3JnRWxlcygpIHtcbiAgdmFyIHVzZXJfaWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcl9pZCcpO1xuICBcbiAgaWYgKCF1c2VyX2lkKSByZXR1cm47XG4gIFxuICBsZXQgb3JnQ2hhbmdlcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcub3JnLWNoYW5nZXInKTtcbiAgXG4gIGZvciAobGV0IGk9MDsgaSA8IG9yZ0NoYW5nZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IG9yZ0NoYW5nZXIgPSBvcmdDaGFuZ2Vyc1tpXTtcbiAgICBcbiAgICB2YXIgY29sbGVjdGlvbiA9IG9yZ0NoYW5nZXIuZ2V0QXR0cmlidXRlKCdkYXRhLWNvbGxlY3Rpb24nKSA/IG9yZ0NoYW5nZXIuZ2V0QXR0cmlidXRlKCdkYXRhLWNvbGxlY3Rpb24nKTogJ21vZHVsZV9hY3Rpdml0eSc7XG4gICAgdmFyIGlkID0gb3JnQ2hhbmdlci5nZXRBdHRyaWJ1dGUoJ2RhdGEtZG9jdW1lbnRfaWQnKTtcbiAgICBcbiAgICBpZiAoY29sbGVjdGlvbiA9PSAndXNlcnMnICYmIGlkID09IHVzZXJfaWQpIHtcbiAgICAgIG9yZ0NoYW5nZXIuYWRkRXZlbnRMaXN0ZW5lcignc2VsZWN0ZWRWYWx1ZScsIGZ1bmN0aW9uKGUpIHsgICAgXG5cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICBnZXRDdXJyZW50T3JnKHVzZXJfaWQpO1xuICAgICAgICAgIFxuICAgICAgICAgIHZhciB0aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKHVwZGF0ZWRDdXJyZW50T3JnKSB7XG4gICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSwgMTAwKVxuICAgICAgICB9LCAzMDApXG4gICAgICB9KVxuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0TG9nb3V0QnRuKCkge1xuICBsZXQgbG9nb3V0QnRucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5sb2dvdXRCdG4nKTtcbiAgXG4gIGZvciAobGV0IGk9MDsgaTxsb2dvdXRCdG5zLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IGxvZ291dEJ0biA9IGxvZ291dEJ0bnNbaV07XG4gICAgXG4gICAgbG9nb3V0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgXG4gICAgICBsb2NhbFN0b3JhZ2UuY2xlYXIoKTtcbiAgICAgIFxuICAgICAgbGV0IGhyZWYgPSB0aGlzLmdldEF0dHJpYnV0ZSgnaHJlZicpO1xuICAgICAgaWYgKGhyZWYpIGRvY3VtZW50LmxvY2F0aW9uLmhyZWYgPSBocmVmO1xuICAgIH0pXG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tTZXNzaW9uKCkge1xuICBcbiAgdmFyIHVzZXJfaWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcl9pZCcpO1xuICBcbiAgaWYgKHVzZXJfaWQpIHtcbiAgICB2YXIgcmVkaXJlY3RUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2Vzc2lvblRydWUnKTtcblxuICAgIGlmIChyZWRpcmVjdFRhZykge1xuICAgICAgbGV0IHJlZGlyZWN0TGluayA9IHJlZGlyZWN0VGFnLmdldEF0dHJpYnV0ZSgnaHJlZicpO1xuICAgICAgaWYgKHJlZGlyZWN0TGluaykge1xuICAgICAgICBkb2N1bWVudC5sb2NhdGlvbi5ocmVmID0gcmVkaXJlY3RMaW5rXG4gICAgICB9IFxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YXIgcmVkaXJlY3RUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2Vzc2lvbkZhbHNlJyk7XG4gIFxuICAgIGlmIChyZWRpcmVjdFRhZykge1xuICAgICAgbGV0IHJlZGlyZWN0TGluayA9IHJlZGlyZWN0VGFnLmdldEF0dHJpYnV0ZSgnaHJlZicpO1xuICAgICAgaWYgKHJlZGlyZWN0TGluaykge1xuICAgICAgICBsb2NhbFN0b3JhZ2UuY2xlYXIoKTtcbiAgICAgICAgZG9jdW1lbnQubG9jYXRpb24uaHJlZiA9IHJlZGlyZWN0TGluayBcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hhbmdlZFVzZXJTdGF0dXMoZGF0YSkge1xuICBpZiAoIWRhdGEudXNlcl9pZCkge1xuICAgIHJldHVybjtcbiAgfVxuICBsZXQgc3RhdHVzRWxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChgW2RhdGEtdXNlcl9zdGF0dXNdW2RhdGEtZG9jdW1lbnRfaWQ9JyR7ZGF0YVsndXNlcl9pZCddfSddYClcbiAgXG4gIHN0YXR1c0Vscy5mb3JFYWNoKChlbCkgPT4ge1xuICAgIGVsLnNldEF0dHJpYnV0ZSgnZGF0YS11c2VyX3N0YXR1cycsIGRhdGFbJ3N0YXR1cyddKTtcbiAgfSlcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./CoCreate-components/CoCreate-users/src/CoCreate-users.js\n");

/***/ })

/******/ })["default"];
});